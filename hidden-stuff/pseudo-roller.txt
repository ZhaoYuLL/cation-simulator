don't forget requestAnimationFrame
if we have enough time (say if we finish the coding by Wednesday)
then we'll have time to port this to C++ XD

object Ball
 - position
 - velocity
 - acceleration
 - force of gravity
 - force of resistance

object TrackLevel
 - 

interface TrackElements
 - positionalAndSlopeElements
 - frictionalElements
 - getNormalVector
 - getNormalForce
 - getGravityVectors
 - getFrictionForce

object Segment
 - 

object Ice
object Rough

object Loop-de-loop
 - 


levels[]
currentLevelElements[]
status = "levelScreen" | "editing" | "gaming" | "winn"
tickLength = 0.5 //integraetion
tickStart = time()
// alternatively, if the tick length is too long, then the draw function will split it up into 50 ms steps but without the wait so it will
// slowly catch up by only doing elementary computations
cameraX
cameraY
cameraScale

calculateXY(position, cameraPosition, cameraScale)
    - returns the adjusted position


setup()
 - setup canvas size and bg screen
 - loading static resources (music!)

draw()
 - level select (HTML)
 - winscreen
 - editing the map
    - hotkey selection (separate HTML element)
       - locks the element to the mouse no drag-and-drop
    - check to see if track length is still valid and 
      the other requirements are met
    - drag eigenpoints connecting track segments around
    - generate the level properly
 - running the map
    - calculate tick length
    - update tickStart
    - get the forces on ball
    - set the ball state as flying or on the track (because we will need to make sure it doesn't clip through the track when it lands, margin of error to not clip through)

eventListeners
when the user starts the level, load in level functionality
 - load in currentLevelElements[] which will have both the elements on the track and those in the menu
when the user selects an element, change the state of the level element to select it